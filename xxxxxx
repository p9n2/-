local Players = game:GetService("Players")
local player = Players.LocalPlayer
local mouse = player:GetMouse()
local camera = game.Workspace.CurrentCamera
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local targetPlayer = nil
local isAiming = false
local smoothFactor = 0.85
local healthThreshold = 5

local function CheckAnti(Plr)
    if not Plr or not Plr.Character then
        return false
    end

    local hrp = Plr.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then
        return false
    end

    local velocity = hrp.Velocity

    if velocity.Y < -70 or velocity.X > 450 or velocity.X < -35 or velocity.Y > 60 or velocity.Z > 35 or velocity.Z < -35 then
        return true
    end
    return false
end

local function aimCameraAt(targetPlayer)
    if targetPlayer and targetPlayer.Character then
        local targetHumanoidRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
        if targetHumanoidRootPart then
            local targetPosition = targetHumanoidRootPart.Position
            local cameraPosition = camera.CFrame.Position
            local desiredCFrame = CFrame.new(cameraPosition, targetPosition)
            camera.CFrame = camera.CFrame:Lerp(desiredCFrame, smoothFactor)
        end
    end
end

local function getClosestPlayerToCursor()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character then
            local targetHumanoidRootPart = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
            if targetHumanoidRootPart then
                local screenPosition, onScreen = camera:WorldToScreenPoint(targetHumanoidRootPart.Position)
                if onScreen then
                    local mousePosition = Vector2.new(mouse.X, mouse.Y)
                    local distance = (Vector2.new(screenPosition.X, screenPosition.Y) - mousePosition).Magnitude
                    if distance < shortestDistance then
                        shortestDistance = distance
                        closestPlayer = otherPlayer
                    end
                end
            end
        end
    end

    return closestPlayer
end

local function setupTargetPlayerHealthListener(targetPlayer)
    local humanoid = targetPlayer.Character and targetPlayer.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.HealthChanged:Connect(function()
            if humanoid.Health <= healthThreshold then
                isAiming = false
                targetPlayer = nil
            end
        end)
    end
end

UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if input.KeyCode == Enum.KeyCode.T and not gameProcessedEvent then
        if isAiming then
            isAiming = false
            targetPlayer = nil
        else
            local closestPlayer = getClosestPlayerToCursor()
            if closestPlayer then
                if CheckAnti(closestPlayer) then
                    print("Anti-Lock detected, Resolved.")
                end
                
                targetPlayer = closestPlayer
                isAiming = true
                setupTargetPlayerHealthListener(closestPlayer)
            end
        end
    end
end)

RunService.RenderStepped:Connect(function()
    if isAiming and targetPlayer then
        aimCameraAt(targetPlayer)
    end
end)
